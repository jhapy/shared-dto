name: Java CI

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - run: echo Build for SHA = ${{ github.event.client_payload.sha }}, REF = ${{ github.event.client_payload.ref }}
      - name: Slack Starting Build
        if: always()
        uses: kpritam/slack-job-status-action@v1
        with:
          job-status: Starting build for SHA = ${{ github.event.client_payload.sha }}, REF = ${{ github.event.client_payload.ref }}
          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel: framework-builds
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.client_payload.ref }}
      - name: Set up JDK 1.14
        uses: actions/setup-java@v1
        with:
          java-version: 1.14
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Build with Maven
        run: mvn -Dmaven.test.skip -s .settings.xml -Dmaven.javadoc.skip -Dossrh_username=${{secrets.ossrh_username}} -Dossrh_password=${{secrets.ossrh_password}} --file pom.xml deploy
      - name: Repository Dispatch to shared-commons repository
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.repos_access_token }}
          repository: jhapy/shared-commons
          event-type: shared-dto-build
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'
      - name: Slack Success
        if: always()
        uses: kpritam/slack-job-status-action@v1
        with:
          job-status: ${{ job.status }}
          slack-bot-token: ${{ secrets.slack_bot_token }}
          channel: framework-builds